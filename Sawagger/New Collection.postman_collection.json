{
	"info": {
		"_postman_id": "fdacb8bb-10ef-4981-9fad-540b29e67219",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23130739"
	},
	"item": [
		{
			"name": "Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"var ObjNum=pm.response.json().length\r",
							"//\r",
							"\r",
							"var Ran_Value=Math.floor(Math.random()*ObjNum)\r",
							"\r",
							"pm.environment.set(\"Book_id\",pm.response.json()[Ran_Value].idBook);\r",
							"pm.environment.set(\"id\", Ran_Value);\r",
							"\r",
							"\r",
							"//pm.environment.set(\"idBook\",pm.response.json()[randN].idBook)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post_Authers Case1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response should be 201 Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post_Authers Case1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"id\": 0,\r\n  \"idBook\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Searching For an id_book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.response.json()\r",
							"var NUN= pm.response.json().length\r",
							"\r",
							"pm.test(\"Searching with valid idBook should return relative data in response body\", function () {\r",
							"pm.expect(pm.response.json()[NUN-1].idBook).to.equal (pm.environment.get(\"Book_id\"))\r",
							"});\r",
							"\r",
							"console.log(pm.response.json())\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/authors/books/{{Book_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"authors",
						"books",
						"{{Book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Your test id\", function () {\r",
							"\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Your test firstName\", function () {\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
							"});\r",
							"pm.test(\"Your test firstName\", function () {\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"id\":{{id}},\r\n  \"idBook\": 0,\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "confirm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"The author's data is changed in GET request firstName\", function () {\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
							"});\r",
							"pm.test(\"The author's data is changed in GET request lastName\", function () {\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}